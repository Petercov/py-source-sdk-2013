// This file has been generated by Py++.

#include "cbase.h"
// This file has been generated by Py++.

#include "boost/python.hpp"

#include "cbase.h"

#include "SkyCamera.h"

#include "ai_basenpc.h"

#include "srcpy_entities.h"

#include "srcpy.h"

#include "tier0/memdbgon.h"

#include "../game/server/python/modules/autogenerated/_entities/CBaseEntity_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/CBaseHandle_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/DeadEntity_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/IHandleEntity_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/IServerEntity_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/IServerUnknown_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/PyHandle_pypp.hpp"

#include "../game/server/python/modules/autogenerated/_entities/_entities_free_functions_pypp.hpp"

namespace bp = boost::python;

typedef CEPyHandle< CBaseEntity > CBaseEntityHANDLE;

struct ptr_CBaseEntity_to_handle : bp::to_python_converter<CBaseEntity *, ptr_CBaseEntity_to_handle>
{
    static PyObject* convert(CBaseEntity *s)
    {
        return s ? bp::incref(s->GetPyHandle().ptr()) : bp::incref(Py_None);
    }
};

struct CBaseEntity_to_handle : bp::to_python_converter<CBaseEntity, CBaseEntity_to_handle>
{
    static PyObject* convert(const CBaseEntity &s)
    {
        return bp::incref(s.GetPyHandle().ptr());
    }
};

struct handle_to_CBaseEntity
{
    handle_to_CBaseEntity()
    {
        bp::converter::registry::insert(
            &extract_CBaseEntity, 
            bp::type_id<CBaseEntity>()
            );
    }

    static void* extract_CBaseEntity(PyObject* op){
       CBaseHandle h = bp::extract<CBaseHandle>(op);
       if( h.Get() == NULL )
           return Py_None;
       return h.Get();
    }
};

BOOST_PYTHON_MODULE(_entities){
    bp::docstring_options doc_options( true, true, false );

    register_IHandleEntity_class();

    register_IServerUnknown_class();

    register_IServerEntity_class();

    register_CBaseEntity_class();

    register_CBaseHandle_class();

    register_DeadEntity_class();

    register_PyHandle_class();

    { //::CBaseEntityHANDLE
        typedef bp::class_< CBaseEntityHANDLE, bp::bases< CBaseHandle > > CBaseEntityHANDLE_exposer_t;
        CBaseEntityHANDLE_exposer_t CBaseEntityHANDLE_exposer = CBaseEntityHANDLE_exposer_t( "CBaseEntityHANDLE", bp::init< >() );
        CBaseEntityHANDLE_exposer.def( bp::init< CBaseEntity * >(( bp::arg("pVal") )) );
        CBaseEntityHANDLE_exposer.def( bp::init< int, int >(( bp::arg("iEntry"), bp::arg("iSerialNumber") )) );
        { //::CBaseEntityHANDLE::GetAttr
        
            typedef bp::object ( ::CBaseEntityHANDLE::*GetAttr_function_type )( const char * ) const;
            
            CBaseEntityHANDLE_exposer.def( 
                "__getattr__"
                , GetAttr_function_type( &::CBaseEntityHANDLE::GetAttr )
            );
        
        }
        { //::CBaseEntityHANDLE::Cmp
        
            typedef bool ( ::CBaseEntityHANDLE::*Cmp_function_type )( bp::object ) const;
            
            CBaseEntityHANDLE_exposer.def( 
                "__cmp__"
                , Cmp_function_type( &::CBaseEntityHANDLE::Cmp )
            );
        
        }
        { //::CBaseEntityHANDLE::NonZero
        
            typedef bool ( ::CBaseEntityHANDLE::*NonZero_function_type )( ) const;
            
            CBaseEntityHANDLE_exposer.def( 
                "__nonzero__"
                , NonZero_function_type( &::CBaseEntityHANDLE::NonZero )
            );
        
        }
        { //::CBaseEntityHANDLE::Set
        
            typedef void ( ::CBaseEntityHANDLE::*Set_function_type )( CBaseEntity * ) const;
            
            CBaseEntityHANDLE_exposer.def( 
                "Set"
                , Set_function_type( &::CBaseEntityHANDLE::Set )
            );
        
        }
        { //::CBaseEntityHANDLE::GetSerialNumber
        
            typedef int ( ::CBaseEntityHANDLE::*GetSerialNumber_function_type )( ) const;
            
            CBaseEntityHANDLE_exposer.def( 
                "GetSerialNumber"
                , GetSerialNumber_function_type( &::CBaseEntityHANDLE::GetSerialNumber )
            );
        
        }
        { //::CBaseEntityHANDLE::GetEntryIndex
        
            typedef int ( ::CBaseEntityHANDLE::*GetEntryIndex_function_type )(  ) const;
            
            CBaseEntityHANDLE_exposer.def( 
                "GetEntryIndex"
                , GetEntryIndex_function_type( &::CBaseEntityHANDLE::GetEntryIndex )
            );
        
        }
        CBaseEntityHANDLE_exposer.def( bp::self != bp::self );
        CBaseEntityHANDLE_exposer.def( bp::self == bp::self );
    }

    ptr_CBaseEntity_to_handle();

    CBaseEntity_to_handle();

    handle_to_CBaseEntity();

    register_free_functions();
}


